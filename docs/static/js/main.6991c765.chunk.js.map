{"version":3,"sources":["images/logo.svg","component/sample/functionComponent.js","component/sample/constComponent.js","component/sample/classComponent.js","component/sample/router.js","serviceWorker.js","index.js"],"names":["module","exports","FunctionComponent","comment","className","src","logo","alt","href","target","rel","ConstComponent","ClassComponent","props","state","x","bindFunc","func","bind","this","setState","console","log","React","Component","Router","type","bindFunc0","func0","bindFunc1","func1","bindFunc2","func2","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"yGAAAA,EAAOC,QAAU,IAA0B,kC,uNCyB5BC,MArBf,YAAuC,IAAXC,EAAU,EAAVA,QAC3B,OACC,yBAAKC,UAAU,OACd,4BAAQA,UAAU,cACjB,yBAAKC,IAAKC,IAAMF,UAAU,qBAAqBG,IAAI,SACnD,2CACc,0CAAgBJ,GAD9B,KAGA,uBACCC,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAJL,kBCcWC,EAtBQ,SAAC,GAAe,IAAdR,EAAa,EAAbA,QAExB,OACC,yBAAKC,UAAU,OACd,4BAAQA,UAAU,cACjB,yBAAKC,IAAKC,IAAMF,UAAU,qBAAqBG,IAAI,SACnD,2CACc,0CAAgBJ,GAD9B,KAGA,uBACCC,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAJL,kBCqCWE,E,kDA5Cd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAEDC,MAAM,CACVC,EAAG,GAGJ,EAAKC,SAAW,EAAKC,KAAKC,KAAV,gBAPE,E,mDAWG,IAAjBC,KAAKL,MAAMC,GACdI,KAAKC,SAAS,CAACL,EAAG,IAClBM,QAAQC,IAAIH,KAAKL,SAEjBK,KAAKC,SAAS,CAACL,EAAG,IAClBM,QAAQC,IAAIH,KAAKL,U,+BAKlB,OACC,yBAAKV,UAAU,OACd,4BAAQA,UAAU,cACjB,yBAAKC,IAAKC,IAAMF,UAAU,qBAAqBG,IAAI,SACnD,2CACc,0CAAgBY,KAAKN,MAAMV,SADzC,KAGA,uBACCC,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAEc,IAAjBS,KAAKL,MAAMC,GAAW,cACL,IAAjBI,KAAKL,MAAMC,GAAW,mB,GArCAQ,IAAMC,WC+DpBC,E,kDA3Dd,WAAYZ,GAAQ,IAAD,8BAClB,cAAMA,IAEDC,MAAM,CACVY,KAAM,GAGP,EAAKC,UAAY,EAAKC,MAAMV,KAAX,gBACjB,EAAKW,UAAY,EAAKC,MAAMZ,KAAX,gBACjB,EAAKa,UAAY,EAAKC,MAAMd,KAAX,gBAEjB,EAAKQ,KAAO,CAAC,WAAY,QAAS,SAXhB,E,oDAelBP,KAAKC,SAAS,CAACM,KAAM,IACrBL,QAAQC,IAAIH,KAAKL,S,8BAGjBK,KAAKC,SAAS,CAACM,KAAM,IACrBL,QAAQC,IAAIH,KAAKL,S,8BAGjBK,KAAKC,SAAS,CAACM,KAAM,IACrBL,QAAQC,IAAIH,KAAKL,S,+BAIjB,OACC,yBAAKV,UAAU,OACd,4BAAQA,UAAU,YACjB,uBACCA,UAAU,WACV6B,QAASd,KAAKQ,WAEbR,KAAKO,KAAK,IAEZ,uBACCtB,UAAU,WACV6B,QAASd,KAAKU,WAEbV,KAAKO,KAAK,IAEZ,uBACCtB,UAAU,WACV6B,QAASd,KAAKY,WAEbZ,KAAKO,KAAK,KAGQ,IAApBP,KAAKL,MAAMY,MAAc,kBAAC,EAAD,CAAUvB,QAASgB,KAAKO,KAAK,KAClC,IAApBP,KAAKL,MAAMY,MAAc,kBAAC,EAAD,CAAOvB,QAASgB,KAAKO,KAAK,KAC/B,IAApBP,KAAKL,MAAMY,MAAc,kBAAC,EAAD,CAAOvB,QAASgB,KAAKO,KAAK,U,GAtDnCH,IAAMC,WCMPU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9B,QAAQ8B,MAAMA,EAAMC,c","file":"static/js/main.6991c765.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './../../images/logo.svg';\nimport './../../sass/Sample.scss';\n\nfunction FunctionComponent({comment}) {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<img src={logo} className=\"App-logo App-logo0\" alt=\"logo\" />\n\t\t\t\t<p>\n\t\t\t\t\tSample Page (<code>made  by {comment}</code>)\n\t\t\t\t</p>\n\t\t\t\t<a\n\t\t\t\t\tclassName=\"App-link\"\n\t\t\t\t\thref=\"https://reactjs.org\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\tLearn React\n\t\t\t\t</a>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default FunctionComponent;\n","import React from 'react';\nimport logo from './../../images/logo.svg';\nimport './../../sass/Sample.scss';\n\nconst ConstComponent = ({comment}) => {\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<img src={logo} className=\"App-logo App-logo2\" alt=\"logo\" />\n\t\t\t\t<p>\n\t\t\t\t\tSample Page (<code>made  by {comment}</code>)\n\t\t\t\t</p>\n\t\t\t\t<a\n\t\t\t\t\tclassName=\"App-link\"\n\t\t\t\t\thref=\"https://reactjs.org\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\tLearn React\n\t\t\t\t</a>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default ConstComponent;\n","import React from 'react';\nimport logo from './../../images/logo.svg';\nimport './../../sass/Sample.scss';\n\nclass ClassComponent extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state={\n\t\t\tx: 0,\n\t\t};\n\n\t\tthis.bindFunc = this.func.bind(this);\n\t}\n\n\tfunc() {\n\t\tif (this.state.x === 0) {\n\t\t\tthis.setState({x: 1});\n\t\t\tconsole.log(this.state);\n\t\t} else {\n\t\t\tthis.setState({x: 0});\n\t\t\tconsole.log(this.state);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<img src={logo} className=\"App-logo App-logo1\" alt=\"logo\" />\n\t\t\t\t\t<p>\n\t\t\t\t\t\tSample Page (<code>made  by {this.props.comment}</code>)\n\t\t\t\t\t</p>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"App-link\"\n\t\t\t\t\t\thref=\"https://reactjs.org\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.state.x === 0 && \"Learn React\"}\n\t\t\t\t\t\t{this.state.x === 1 && \"Try React\"}\n\t\t\t\t\t</a>\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default ClassComponent;\n","import React from 'react';\nimport Function from './functionComponent';\nimport Const from './constComponent';\nimport Class from './classComponent';\nimport './../../sass/Sample.scss';\n\nclass Router extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state={\n\t\t\ttype: 0,\n\t\t};\n\n\t\tthis.bindFunc0 = this.func0.bind(this);\n\t\tthis.bindFunc1 = this.func1.bind(this);\n\t\tthis.bindFunc2 = this.func2.bind(this);\n\n\t\tthis.type = [\"Function\", \"Class\", \"Const\"]\n\t}\n\n\tfunc0() {\n\t\tthis.setState({type: 0});\n\t\tconsole.log(this.state);\n\t}\n\tfunc1() {\n\t\tthis.setState({type: 1});\n\t\tconsole.log(this.state);\n\t}\n\tfunc2() {\n\t\tthis.setState({type: 2});\n\t\tconsole.log(this.state);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"flex-box\">\n\t\t\t\t\t<p\n\t\t\t\t\t\tclassName=\"App-link\"\n\t\t\t\t\t\tonClick={this.bindFunc0}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.type[0]}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p\n\t\t\t\t\t\tclassName=\"App-link\"\n\t\t\t\t\t\tonClick={this.bindFunc1}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.type[1]}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p\n\t\t\t\t\t\tclassName=\"App-link\"\n\t\t\t\t\t\tonClick={this.bindFunc2}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.type[2]}\n\t\t\t\t\t</p>\n\t\t\t\t</header>\n\t\t\t\t{this.state.type === 0 && <Function comment={this.type[0]} />}\n\t\t\t\t{this.state.type === 1 && <Class comment={this.type[1]} />}\n\t\t\t\t{this.state.type === 2 && <Const comment={this.type[2]} />}\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/index.scss';\nimport Router from './component/sample/router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n\t  <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}